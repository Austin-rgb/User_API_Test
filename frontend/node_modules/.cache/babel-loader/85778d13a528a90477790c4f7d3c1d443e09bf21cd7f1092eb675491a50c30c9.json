{"ast":null,"code":"var _jsxFileName = \"D:\\\\API\\\\APIproject\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// src/components/ResetPassword.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    uid,\n    token\n  } = useParams();\n  const [passwordData, setPasswordData] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  });\n  const handleChange = e => {\n    setPasswordData({\n      ...passwordData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\n      alert('Passwords do not match.');\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/api/reset-password/${uid}/${token}/`, {\n        password: passwordData.newPassword\n      });\n      console.log(response.data);\n      alert('Password reset successful!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to reset password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"newPassword\",\n      placeholder: \"New Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      placeholder: \"Confirm New Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"+wMj0qzfjXQ+wBJWx1t9L+NU5u4=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","axios","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","uid","token","passwordData","setPasswordData","newPassword","confirmPassword","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","response","post","password","console","log","data","error","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/API/APIproject/frontend/src/components/ResetPassword.js"],"sourcesContent":["// src/components/ResetPassword.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ResetPassword = () => {\r\n  const { uid, token } = useParams();\r\n  const [passwordData, setPasswordData] = useState({ newPassword: '', confirmPassword: '' });\r\n\r\n  const handleChange = (e) => {\r\n    setPasswordData({ ...passwordData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (passwordData.newPassword !== passwordData.confirmPassword) {\r\n      alert('Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:8000/api/reset-password/${uid}/${token}/`, {\r\n        password: passwordData.newPassword,\r\n      });\r\n      console.log(response.data);\r\n      alert('Password reset successful!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Failed to reset password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"password\" name=\"newPassword\" placeholder=\"New Password\" onChange={handleChange} required />\r\n      <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm New Password\" onChange={handleChange} required />\r\n      <button type=\"submit\">Reset Password</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,GAAG;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAClC,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC;IAAEW,WAAW,EAAE,EAAE;IAAEC,eAAe,EAAE;EAAG,CAAC,CAAC;EAE1F,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BJ,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAE,CAACK,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACvE,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAIV,YAAY,CAACE,WAAW,KAAKF,YAAY,CAACG,eAAe,EAAE;MAC7DQ,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,4CAA4Cf,GAAG,IAAIC,KAAK,GAAG,EAAE;QAC7Fe,QAAQ,EAAEd,YAAY,CAACE;MACzB,CAAC,CAAC;MACFa,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,IAAI,CAAC;MAC1BN,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACpBP,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,oBACEhB,OAAA;IAAMwB,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BzB,OAAA;MAAO0B,IAAI,EAAC,UAAU;MAACd,IAAI,EAAC,aAAa;MAACe,WAAW,EAAC,cAAc;MAACC,QAAQ,EAAEnB,YAAa;MAACoB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxGjC,OAAA;MAAO0B,IAAI,EAAC,UAAU;MAACd,IAAI,EAAC,iBAAiB;MAACe,WAAW,EAAC,sBAAsB;MAACC,QAAQ,EAAEnB,YAAa;MAACoB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpHjC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX,CAAC;AAAC/B,EAAA,CAlCID,aAAa;EAAA,QACMH,SAAS;AAAA;AAAAoC,EAAA,GAD5BjC,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}