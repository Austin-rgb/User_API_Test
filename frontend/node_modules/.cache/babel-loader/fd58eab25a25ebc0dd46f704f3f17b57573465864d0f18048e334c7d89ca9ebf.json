{"ast":null,"code":"// src/services/api.js\n\nimport axios from 'axios';\n\n// Base URL for the Django API\nconst API_URL = 'http://localhost:8000/api/users';\n\n// Create an Axios instance with the base URL\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Signup API\nexport const signup = async userData => {\n  try {\n    const response = await api.post('/signup/', userData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Login API\nexport const login = async credentials => {\n  try {\n    const response = await api.post('/login/', credentials);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Forgot Password API\nexport const forgotPassword = async email => {\n  try {\n    const response = await api.post('/forgot-password/', {\n      email\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Reset Password API\nexport const resetPassword = async resetData => {\n  try {\n    const response = await api.post('/reset-password/', resetData);\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};\n\n// Profile Update API\nexport const updateProfile = async (token, profileData) => {\n  try {\n    const response = await api.put('/profile-update/', profileData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error.response.data;\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","signup","userData","response","post","data","error","login","credentials","forgotPassword","email","resetPassword","resetData","updateProfile","token","profileData","put","Authorization"],"sources":["D:/API/APIproject/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Base URL for the Django API\r\nconst API_URL = 'http://localhost:8000/api/users';\r\n\r\n// Create an Axios instance with the base URL\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Signup API\r\nexport const signup = async (userData) => {\r\n  try {\r\n    const response = await api.post('/signup/', userData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Login API\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await api.post('/login/', credentials);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Forgot Password API\r\nexport const forgotPassword = async (email) => {\r\n  try {\r\n    const response = await api.post('/forgot-password/', { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Reset Password API\r\nexport const resetPassword = async (resetData) => {\r\n  try {\r\n    const response = await api.post('/reset-password/', resetData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n\r\n// Profile Update API\r\nexport const updateProfile = async (token, profileData) => {\r\n  try {\r\n    const response = await api.put('/profile-update/', profileData, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response.data;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,UAAU,EAAEF,QAAQ,CAAC;IACrD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAME,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,SAAS,EAAEI,WAAW,CAAC;IACvD,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACF,MAAMP,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,mBAAmB,EAAE;MAAEM;IAAM,CAAC,CAAC;IAC/D,OAAOP,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAOC,SAAS,IAAK;EAChD,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,kBAAkB,EAAEQ,SAAS,CAAC;IAC9D,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,aAAa,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,KAAK;EACzD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMN,GAAG,CAACmB,GAAG,CAAC,kBAAkB,EAAED,WAAW,EAAE;MAC9Df,OAAO,EAAE;QACPiB,aAAa,EAAE,UAAUH,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAACH,QAAQ,CAACE,IAAI;EAC3B;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}