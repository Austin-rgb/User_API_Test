{"ast":null,"code":"var _jsxFileName = \"D:\\\\API\\\\APIproject\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const handleReset = async e => {\n    e.preventDefault();\n    try {\n      await api.post('reset-password/', {\n        email,\n        otp,\n        new_password: newPassword\n      });\n      // Notify user of successful password reset\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleReset,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: otp,\n      onChange: e => setOtp(e.target.value),\n      placeholder: \"OTP\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value),\n      placeholder: \"New Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"Bu2zW31brnDShOjEHeLOujh+qOU=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["api","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","useState","otp","setOtp","newPassword","setNewPassword","handleReset","e","preventDefault","post","new_password","error","console","onSubmit","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/API/APIproject/frontend/src/components/ResetPassword.js"],"sourcesContent":["// import React, { useState } from 'react';\r\nimport api from '../api';\r\n\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n\r\n  const handleReset = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await api.post('reset-password/', { email, otp, new_password: newPassword });\r\n      // Notify user of successful password reset\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleReset}>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n      <input type=\"text\" value={otp} onChange={(e) => setOtp(e.target.value)} placeholder=\"OTP\" required />\r\n      <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} placeholder=\"New Password\" required />\r\n      <button type=\"submit\">Reset Password</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":";;AAAA;AACA,OAAOA,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMK,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMd,GAAG,CAACe,IAAI,CAAC,iBAAiB,EAAE;QAAEV,KAAK;QAAEG,GAAG;QAAEQ,YAAY,EAAEN;MAAY,CAAC,CAAC;MAC5E;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEf,OAAA;IAAMiB,QAAQ,EAAEP,WAAY;IAAAQ,QAAA,gBAC1BlB,OAAA;MAAOmB,IAAI,EAAC,OAAO;MAACC,KAAK,EAAEjB,KAAM;MAACkB,QAAQ,EAAGV,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,OAAO;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5G5B,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEd,GAAI;MAACe,QAAQ,EAAGV,CAAC,IAAKJ,MAAM,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,KAAK;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrG5B,OAAA;MAAOmB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEZ,WAAY;MAACa,QAAQ,EAAGV,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC,cAAc;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClI5B,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEX,CAAC;AAAC1B,EAAA,CAvBID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}