{"ast":null,"code":"var _jsxFileName = \"D:\\\\API\\\\APIproject\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// src/components/ForgotPassword.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/forgot-password/', {\n        email\n      });\n      console.log(response.data);\n      alert('Password reset link has been sent to your email.');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to send password reset link.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Reset Link\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"qu4bovk5U4+JuhY7vxbmswqixrc=\");\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","handleSubmit","e","preventDefault","response","post","console","log","data","alert","error","onSubmit","children","type","name","placeholder","onChange","target","value","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/API/APIproject/frontend/src/components/ForgotPassword.js"],"sourcesContent":["// src/components/ForgotPassword.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/forgot-password/', { email });\r\n      console.log(response.data);\r\n      alert('Password reset link has been sent to your email.');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Failed to send password reset link.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={(e) => setEmail(e.target.value)} required />\r\n      <button type=\"submit\">Send Reset Link</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,4CAA4C,EAAE;QAAEN;MAAM,CAAC,CAAC;MAC1FO,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BC,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACpBD,KAAK,CAAC,qCAAqC,CAAC;IAC9C;EACF,CAAC;EAED,oBACEb,OAAA;IAAMe,QAAQ,EAAEV,YAAa;IAAAW,QAAA,gBAC3BhB,OAAA;MAAOiB,IAAI,EAAC,OAAO;MAACC,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAGd,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACe,MAAM,CAACC,KAAK,CAAE;MAACC,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3G3B,OAAA;MAAQiB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAe;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEX,CAAC;AAACzB,EAAA,CArBID,cAAc;AAAA2B,EAAA,GAAd3B,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}