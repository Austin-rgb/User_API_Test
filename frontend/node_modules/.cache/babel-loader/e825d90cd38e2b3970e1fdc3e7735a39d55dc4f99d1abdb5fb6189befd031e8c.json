{"ast":null,"code":"var _jsxFileName = \"D:\\\\API\\\\APIproject\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// function Login() {\n//   const [formData, setFormData] = useState({ email: '', password: '' });\n//   const [error, setError] = useState('');\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post('http://localhost:8000/api/login/', formData);\n//       localStorage.setItem('authToken', response.data.access); // Store access token\n//       window.location.href = '/api/profile'; // Redirect to profile update page\n//       console.log('login successfully.');\n//     } catch (error) {\n//       setError('Login failed: Invalid credentials');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h2>Log in</h2>\n//       <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\n//       <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\n//       <button type=\"submit\">Log In</button>\n//       <a href=\"/api/forgot-password\">Forgot Password?</a>\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\n//     </form>\n//   );\n// }\n\n// export default Login;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/login/', formData);\n      localStorage.setItem('authToken', response.data.access); // Store access token with correct key\n      window.location.href = '/profile'; // Redirect to profile page\n      console.log('Login successful.');\n    } catch (error) {\n      setError('Login failed: Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/forgot-password\",\n      children: \"Forgot Password?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"xXN82lk70W93bXaRlVuUBGUyW+4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","localStorage","setItem","data","access","window","location","href","console","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","style","color","_c","$RefreshReg$"],"sources":["D:/API/APIproject/frontend/src/components/Login.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n\r\n// function Login() {\r\n//   const [formData, setFormData] = useState({ email: '', password: '' });\r\n//   const [error, setError] = useState('');\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8000/api/login/', formData);\r\n//       localStorage.setItem('authToken', response.data.access); // Store access token\r\n//       window.location.href = '/api/profile'; // Redirect to profile update page\r\n//       console.log('login successfully.');\r\n//     } catch (error) {\r\n//       setError('Login failed: Invalid credentials');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <h2>Log in</h2>\r\n//       <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n//       <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n//       <button type=\"submit\">Log In</button>\r\n//       <a href=\"/api/forgot-password\">Forgot Password?</a>\r\n//       {error && <p style={{ color: 'red' }}>{error}</p>}\r\n//     </form>\r\n//   );\r\n// }\r\n\r\n// export default Login;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/login/', formData);\r\n      localStorage.setItem('authToken', response.data.access); // Store access token with correct key\r\n      window.location.href = '/profile'; // Redirect to profile page\r\n      console.log('Login successful.');\r\n    } catch (error) {\r\n      setError('Login failed: Invalid credentials');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Log in</h2>\r\n      <input type=\"email\" name=\"email\" placeholder=\"Email\" onChange={handleChange} required />\r\n      <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n      <button type=\"submit\">Log In</button>\r\n      <a href=\"/forgot-password\">Forgot Password?</a>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}